# Name of the GitHub Action
name: Deploy New APK and Update JSON

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Clean up old APKs
        run: |
          mkdir -p downloads
          rm -f downloads/*.apk

      # This step should now work as long as you upload ONLY ONE apk to the release, regardless of its name.
      - name: Download release asset (the APK)
        uses: robinraju/release-downloader@v1.9
        with:
          repository: ${{ github.repository }}
          tag: ${{ github.ref_name }}
          fileName: "*.apk" # We'll use a wildcard to grab any APK file
          target: "downloads/"
          token: ${{ secrets.GITHUB_TOKEN }}

      # --- THIS IS THE FIXED STEP ---
      - name: Rename APK with version tag
        run: |
          VERSION_TAG="${{ github.ref_name }}"
          # Find the name of the downloaded APK. There should only be one.
          DOWNLOADED_APK=$(ls downloads/*.apk)
          NEW_FILENAME="app-release-${VERSION_TAG}.apk"
          # Rename the actual downloaded file to our standard naming convention
          mv "$DOWNLOADED_APK" "downloads/${NEW_FILENAME}"
          echo "Renamed '$DOWNLOADED_APK' to '${NEW_FILENAME}'"
          echo "NEW_APK_FILENAME=${NEW_FILENAME}" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # The rest of the workflow remains the same as it relies on the NEW_APK_FILENAME variable
      - name: Update apk-info.json and version-check.json
        env:
          RELEASE_NOTES: ${{ github.event.release.body }}
          GITHUB_REPO: ${{ github.repository }}
          NEW_APK_FILENAME: ${{ env.NEW_APK_FILENAME }}
        run: |
          # ... (no changes needed in this Node.js script)
          const fs = require('fs');
          const newApkFilename = process.env.NEW_APK_FILENAME;
          if (!newApkFilename) {
            console.error("Error: NEW_APK_FILENAME environment variable not set.");
            process.exit(1);
          }
          const apkPath = `./downloads/${newApkFilename}`;
          const apkInfoPath = './apk-info.json';
          const stats = fs.statSync(apkPath);
          const fileSizeInMB = (stats.size / (1024 * 1024)).toFixed(1);
          const versionName = "${{ github.ref_name }}".replace('v', '');
          const today = new Date().toISOString().slice(0, 10);
          const webInfo = {
            version: versionName,
            update_date: today,
            size: `${fileSizeInMB} MB`,
            apk_url: `./downloads/${newApkFilename}`
          };
          fs.writeFileSync(apkInfoPath, JSON.stringify(webInfo, null, 2));
          console.log(`Updated ${apkInfoPath} to point to ${newApkFilename}`);
          const appCheckPath = './version-check.json';
          const versionParts = versionName.split('.').map(part => parseInt(part, 10));
          const generatedVersionCode = (versionParts[0] * 10000) + (versionParts[1] * 100) + (versionParts[2] || 0);
          const releaseNotes = process.env.RELEASE_NOTES || "General improvements and bug fixes.";
          const downloadUrl = `https://raw.githubusercontent.com/${process.env.GITHUB_REPO}/main/downloads/${newApkFilename}`;
          const appCheckInfo = {
            versionCode: generatedVersionCode,
            versionName: versionName,
            downloadUrl: downloadUrl,
            whatsNew: releaseNotes
          };
          fs.writeFileSync(appCheckPath, JSON.stringify(appCheckInfo, null, 4));
          console.log(`Generated ${appCheckPath} with versionCode ${generatedVersionCode}.`);
        shell: node {0}

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(release): Auto-update APK and JSON for version ${{ github.ref_name }}"
          file_pattern: "downloads/*.apk apk-info.json version-check.json"
