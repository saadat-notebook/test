name: Deploy New APK and Update JSON

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Clean up old APKs
        run: find downloads -type f -name "*.apk" -delete

      # --- NEW AND IMPROVED DOWNLOAD STEP ---
      # This step uses the GitHub API directly to find and download the APK.
      - name: Download APK from release assets
        run: |
          # Use the GitHub API to get the download URL for the asset ending in .apk
          # The GITHUB_TOKEN is automatically available to the workflow
          APK_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}" | \
            jq -r '.assets[] | select(.name | endswith(".apk")) | .browser_download_url')

          # Check if the URL was found. If not, fail the job.
          if [ -z "$APK_URL" ]; then
            echo "Error: Could not find an APK asset in the release."
            exit 1
          fi
          
          echo "Found APK URL: $APK_URL"
          
          # Download the asset using the URL
          # The '-L' flag follows redirects, which is important for GitHub downloads
          curl -L -o "downloads/app-release-${{ github.ref_name }}.apk" "$APK_URL"
          
          echo "Successfully downloaded APK."

      # --- NO LONGER NEEDED ---
      # The download step now saves the file with the correct name directly,
      # so we can remove the separate "Rename APK" and "Verify" steps.

      # The rest of the workflow remains the same...
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Update apk-info.json and version-check.json
        env:
          RELEASE_NOTES: ${{ github.event.release.body }}
          GITHUB_REPO: ${{ github.repository }}
          NEW_APK_FILENAME: "app-release-${{ github.ref_name }}.apk"
        run: |
          const fs = require('fs');
          const newApkFilename = process.env.NEW_APK_FILENAME;
          const apkInfoPath = './apk-info.json';
          const apkPath = `./downloads/${newApkFilename}`;
          
          // Add a check to ensure the file exists before reading its stats
          if (!fs.existsSync(apkPath)) {
            console.error(`Error: The file ${apkPath} does not exist.`);
            process.exit(1);
          }

          const stats = fs.statSync(apkPath);
          const fileSizeInMB = (stats.size / (1024 * 1024)).toFixed(1);
          const versionName = "${{ github.ref_name }}".replace('v', '');
          const today = new Date().toISOString().slice(0, 10);
          const webInfo = {
            version: versionName,
            update_date: today,
            size: `${fileSizeInMB} MB`,
            apk_url: `./downloads/${newApkFilename}`
          };
          fs.writeFileSync(apkInfoPath, JSON.stringify(webInfo, null, 2));
          const appCheckPath = './version-check.json';
          const versionParts = versionName.split('.').map(part => parseInt(part, 10));
          const generatedVersionCode = (versionParts[0] * 10000) + (versionParts[1] * 100) + (versionParts[2] || 0);
          const releaseNotes = process.env.RELEASE_NOTES || "General improvements and bug fixes.";
          const downloadUrl = `https://raw.githubusercontent.com/${process.env.GITHUB_REPO}/main/downloads/${newApkFilename}`;
          const appCheckInfo = {
            versionCode: generatedVersionCode,
            versionName: versionName,
            downloadUrl: downloadUrl,
            whatsNew: releaseNotes
          };
          fs.writeFileSync(appCheckPath, JSON.stringify(appCheckInfo, null, 4));
        shell: node {0}

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(release): Auto-update APK and JSON for version ${{ github.ref_name }}"
          file_pattern: "downloads/*.apk apk-info.json version-check.json"
